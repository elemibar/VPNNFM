 @model VMActividad
 @using Dominio.EntidadesNegocio;
 
 <!-- /////////////////////// BUSQUEDA //////////////////////////////////// -->
<div class="row">
    <div class="col-md">

        <form class="form-row" id="frmBusc" ><!--enctype="multipart/form-data" method="post" asp-action="AddVPN">-->

            <div class="form-group col-md-1">
                <input type="button" id="btnAddIPToList" value="+"
                    class="form-control btn btn-outline-primary btn-circle mt-3">
            </div>

            <div class="form-group col-md-3">
                <label class="col-sm" for="txtIp">
                    <span class="h6 small bg-white text-muted pt-1 pl-2 pr-2">IP</span>
                </label>
                <div class="inline">
                    <input class="form-control mt-n3" id="txtIp" type="text" name="NIp" placeholder="IP">
                </div>
            </div>

            <div class="form-group col-md-2">
                <label class="col-sm" for="dateAlta">
                    <span class="h6 small bg-white text-muted pt-1 pl-2 pr-2">Inicio</span>
                </label>
                <input class="form-control mt-n3" id="dtInicio" type="date" name="NIni" />
            </div>

            <div class="form-group col-md-2">
                <label class="col-sm" for="dateBaja">
                    <span class="h6 small bg-white text-muted pt-1 pl-2 pr-2">Fin</span>
                </label>
                <input class="form-control mt-n3" id="dtFin" type="date" name="NFin" />
            </div>

            <div class="form-group col-md-2">
                <label for="Tipo" class="col-sm">
                    <span class="h6 small bg-white text-muted pt-1 pl-2 pr-2">Tipo</span>
                </label>
                <select class="form-control mt-n3" name="NTipo" id="selTipo">
                    @foreach (VPN.EnumTipo tip in Enum.GetValues(typeof(VPN.EnumTipo)))
                    {
                        
                        <option value="@tip.GetHashCode()">@tip</option>
                        
                    }
                </select>
            </div>

            <div class="form-group col-md-2">
                <input type="button" id="btnBuscar" value="Buscar" valor="0"
                    class="form-control btn btn-outline-primary btn-circle mt-3">
            </div>

        </form>
            
 
        <!-- //////////////// LISTADO de Datos de busqueda (VPNs) ///////////////////////////// -->
 
        <table class="table table-striped " id="tabVpns">
            <tbody>
                @{
                    int i = 0;
                    foreach(VMPlainVPN v in Model.PVPNs)
                    {
                        <tr>
                            <td class="col-sm-1">
                                <button type="button" id="removeIPFromList" value="-" class="btn btn-outline-danger btn-circle btn-sm text-right" onclick="javascript:removeIPFromListf(this); return false;">-</button>
                            </td>
                            <td class="col-sm-3">
                                @Html.DisplayFor(x => v.Ip)
                            </td>
                            <td class="col-sm-3">
                                @if(v.Alta != null && v.Alta != "" && DateTime.Compare(Convert.ToDateTime(v.Alta), Convert.ToDateTime("01/01/0001")) != 0)
                                {
                                    @Html.DisplayFor(x => v.Alta)
                                }
                            </td>
                            <td class="col-sm-3">
                                @if(v.Baja != null && v.Baja != "" && DateTime.Compare(Convert.ToDateTime(v.Baja), Convert.ToDateTime("01/01/0001")) != 0)
                                {
                                    @Html.DisplayFor(x => v.Baja)
                                }
                            </td>
                            <td class="col-sm-2" value="@v.Tipo.GetHashCode()">
                                @Html.DisplayFor(x => v.Tipo)
                            </td>
                        </tr>
                        i++;
                    }
                }
                        
            </tbody>
        </table>
            
    </div>
</div>
     
<div class="container-fluid">
    <div class="row">
        <!-- //////////// BOTON DESACARGA ////////////// -->
        <div class="col md-3">
            <button id="btnDownload" class="btn btn-outline-primary mb-3" type="button">
                <img src="~/Icons/download.svg" width="16" height="16">
                Descargar
            </button>
        </div>
        <!-- //////////////////////////////////////////////// -->
        <!-- //////////// CONTROLES PAGINACION ////////////// -->
        <div class="col md-9">
            <button id="btnMenos10" class="btn mb-2" type="button" @(Model.pagina>9?null:"disabled") valor="@(Model.pagina-10)">
                <img src="~/Icons/angulo-doble-pequeno-izquierdo.svg" width="16" height="16" valor="@(Model.pagina-10)">
            </button>
            <button id="btnMenos1" class="btn mb-2" type="button" @(Model.pagina>0?null:"disabled") valor="@(Model.pagina-1)">
                <img src="~/Icons/angulo-pequeno-izquierdo.svg" width="16" height="16" valor="@(Model.pagina-1)">
            </button>
            <a>@(Model.pagina+1) de @((Model.cantRows/(Model.tamanioPag))+1)</a>
            <button id="btnMas1" class="btn mb-2" type="button" @(((Model.cantRows/Model.tamanioPag)-Model.pagina)>0?null:"disabled") valor="@(Model.pagina+1)">
                <img src="~/Icons/angulo-pequeno-derecho.svg" width="16" height="16" valor="@(Model.pagina+1)">
            </button>
            <button id="btnMas10" class="btn mb-2" type="button" @(((Model.cantRows/Model.tamanioPag)-Model.pagina)>9?null:"disabled") valor="@(Model.pagina+10)">
                <img src="~/Icons/angulo-doble-pequeno-derecho.svg" width="16" height="16" valor="@(Model.pagina+10)">
            </button>
        </div>
        <!-- //////////////////////////////////////////////// -->
    </div>
</div>




<!-- //////////////// SCRIPTS PARA BUSQUEDA ///////////////////////////// -->

<script type="text/javascript">

document.querySelector('#btnAddIPToList').addEventListener("click", addVPNToList);
document.querySelector('#btnBuscar').addEventListener("click", buscar);
document.querySelector('#frmBusc').addEventListener("submit", buscar);
document.querySelector('#btnMas1').addEventListener("click", buscar);
document.querySelector('#btnMas10').addEventListener("click", buscar);
document.querySelector('#btnMenos1').addEventListener("click", buscar);
document.querySelector('#btnMenos10').addEventListener("click", buscar);
document.querySelector('#btnDownload').addEventListener("click", download);

function removeIPFromListf(tabIpRow) 
{

    tabIpRow.parentNode.parentNode.remove();

}

function buscar(event)
{
    sendToControl(event, "../Actividad/Index");
}

function addVPNToList(event)
{
    sendToControl(event, "../Actividad/AddVPN");
}

function download(event)
{
    sendToControl(event, "../Actividad/DownloadCSV");
}

function sendToControl(event, url)
{
    
    event.preventDefault();
    event.stopPropagation();

    var JsonString = "";

    var formJson = returnFormAsJson();
    var tableJson = returnVPNsTableAsJson();

    if ((formJson != null && formJson != "") || (tableJson != null && tableJson != ""))
    {
        JsonString = `{"PVPNs":[
            `;

        if (formJson != "") JsonString += formJson;

        if (formJson != null && formJson != "" && tableJson != null && tableJson != "")
        {
            JsonString += `,
                `;
        }

        if (tableJson != null && tableJson != "") JsonString += tableJson;


        JsonString += `
                ]`;

        // Nuevo para paginacion
        JsonString += `,
                "pagina": ${Number(event.target.getAttribute("valor"))},
                "tamanioPag":50}`;
    }
    else
    {
        // Si el formulario de busqueda y la tabla est[an vacias solo se manda el numero de pagina
        JsonString = `{"pagina": ${Number(event.target.getAttribute("valor"))},
                "tamanioPag":50}`
    }

    
    sendToControlAjax(JsonString, url);

}

function returnFormAsJson()
{

    let newIp = document.querySelector("#txtIp").value.trim();
    let newInicio = document.querySelector("#dtInicio").value;
    let newFin = document.querySelector("#dtFin").value;
    let newTipo = document.querySelector("#selTipo").value;
    var newVPN = "";

    if ((newIp != "") || (newInicio != "") || (newFin != "") || newTipo != 0)
    {
        newVPN =
            `{
                "Ip": "${newIp}",
                "Alta": "${newInicio}",
                "Baja": "${newFin}",
                "Tipo": ${newTipo}
            }`;
    }
    else
    {
        newVPN = "";
    }

    return newVPN;

}

function returnVPNsTableAsJson()
{

    var tablaRows = document.querySelectorAll("#tabVpns tbody tr");
    let newTabIp = "";
    let newTabInicio = "";
    let newTabFin = "";
    let newTabTipo = "";
    var vpnListJson = "";

    if (tablaRows != null)
    {
        
        if (tablaRows.length > 0)
        {
        

            for (let i = 0; i < tablaRows.length; i++)
            {
                let newTabIp = tablaRows[i].querySelectorAll("td")[1].innerHTML.trim();

                let newTabInicio = tablaRows[i].querySelectorAll("td")[2].innerHTML.trim();

                let newTabFin = tablaRows[i].querySelectorAll("td")[3].innerHTML.trim();

                let newTabTipo = tablaRows[i].querySelectorAll("td")[4].attributes.value.value;

        
                vpnListJson +=
                    `{
                        "Ip": "${newTabIp}",
                        "Alta": "${newTabInicio}",
                        "Baja": "${newTabFin}",
                        "Tipo": ${newTabTipo}
                    }`;
                if (i != tablaRows.length - 1)
                    vpnListJson += `,
                        `;
            }
        }
        else
        {
            vpnListJson = "";
        }
    }


    return vpnListJson;
}

function sendToControlAjax(data, url)
{

    var dataType = 'application/json; charset=utf-8';
    
    $.ajax({
        type: 'POST',
        url: url,
        //dataType: 'json',
        contentType: dataType,
        data: data,
        success: function (result)
        {
            if(url == "../Actividad/AddVPN")
            {
                $('#searchForm').empty();
                $('#searchForm').html(result);
            }
            else if(url == "../Actividad/DownloadCSV")
            {
                exportData(result);
            }
                else
                {
                    $('body').empty();
                    $('body').html(result);
                }
        },
        error: function (result)
        {
            console.log("Error: ");
            console.log(result);
        }
    });

}

function exportData(data){
    var currentdate = new Date();
    var JVPNS = data;

    csvContent = "data:text/csv;charset=utf-8,";
    /* agrega el delimitador de columna como "," y cada row separada por un salto de linea(\r\n) */
    /* valida ademas si los campos son nulos agrega celda vacia y si las fechas son "indefinidas" tambien es celda vacia */
    csvContent += "IP,Nombre,Usuario,Dependencia,Direccion,Gabinete,Alta,Baja,Tipo,Inicio,Fin,Destino,Puerto,Protocolo,Segundos,Bytes, Bytes HR\r\n"
    JVPNS.value.forEach(function(rowArray){
        rowArray.actividades.forEach(function(actRowArray){
        
        row =   (rowArray.ip===null?" ":rowArray.ip)+","+
                (rowArray.nombre===null?" ":rowArray.nombre)+","+
                (rowArray.usuario===null?" ":rowArray.usuario)+","+
                (rowArray.dependencia===null?" ":rowArray.dependencia)+","+
                (rowArray.direccion===null?" ":rowArray.direccion)+","+
                (rowArray.gabinete===null?" ":rowArray.gabinete)+","+
                (rowArray.alta==="0001-01-01T00:00:00"?" ":rowArray.alta)+","+
                (rowArray.baja==="0001-01-01T00:00:00"?" ":rowArray.baja)+","+
                (rowArray.tipo===1?"Modem":"Certificado")+","+
                (actRowArray.inicio===null?" ":actRowArray.inicio)+","+
                (actRowArray.fin===null?" ":actRowArray.fin)+","+
                (actRowArray.destino===null?" ":actRowArray.destino)+","+
                (actRowArray.puerto===null?" ":actRowArray.puerto)+","+
                (actRowArray.protocolo===null?" ":actRowArray.protocolo)+","+
                (actRowArray.segundos===null?" ":actRowArray.segundos)+","+
                (actRowArray.bytes===null?" ":actRowArray.bytes)+","+
                (actRowArray.bytesh===null?" ":actRowArray.bytesh);

        

        csvContent += row + "\r\n";
        })
    });

    /* crea un nodo DOM <a> oculto y le setea el atributo download */
    var encodedUri = encodeURI(csvContent);
    var link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    
    link.setAttribute("download", "reporte_actividades_"+currentdate.getDate()+""+
                (currentdate.getMonth()+1)+""+
                currentdate.getFullYear()+""+
                currentdate.getHours()+""+
                currentdate.getMinutes()+".csv");
    document.body.appendChild(link);
    /* descarga el archivo de datos con nombre "reporte_actividades_.csv" */
    link.click();    

}


</script>